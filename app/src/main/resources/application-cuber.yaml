spring:
    thymeleaf:
        check-template: false
    reactor:
        context-propagation: auto
    mail:
        host: ${EMAIL_HOST}
        port: ${EMAIL_PORT}
        username: ${EMAIL}
        password: ${EMAIL_PASS}
        sendTo: ${EMAIL_SEND_TO}
        protocol: smtps
        auth: true
        ssl-enable: true
        smtp-debug: false
    application:
        name: users-backend
    security:
        oauth2:
            resourceserver:
                jwt:
                    jwk-set-uri: ${front-url}/${realmsPath}/protocol/openid-connect/certs
    liquibase:
        enabled: false
    r2dbc:
        username: ${DB_USERNAME}
        password: ${DB_PASSWORD}
        url: ${R2DBC_DB_URL}
    datasource:
        driver-class-name: org.postgresql.Driver
    jpa:
        hibernate:
            ddl-auto: update

server:
    port: ${APPLICATION_PORT}

front-url: ${KC_SERVICE_URL}
realmsPath: realms/${REALM}

keycloak:
    client-id: ${CLIENT_ID}
    client-secret: ${CLIENT_SECRET}
    server-url: ${front-url}
    realm: ${REALM}
    sslPath: ${SSL_PATH}

management:
    server:
        port: ${ACTUATOR_PORT}
    metrics:
        distribution:
            slo:
                http.server.requests: 100ms, 200ms, 300ms, 400ms, 500ms
            percentiles-histogram:
              "[http.server.requests]": true
    endpoints:
        web.exposure.include: health, prometheus
        web:
            path-mapping:
                prometheus: "metrics"

# open api setup
springdoc:
    api-docs:
        enabled: true
        path: /swagger-docs/v3/api-docs
    swagger-ui.path: ${springdoc.api-docs.path}/swagger-ui.html

logging:
    stack-trace:
        print: true
        lines-max: 300
    level:
        org:
            springframework:
                security:
                    web:
                        server: ${LOG_SECURITY_LEVEL}